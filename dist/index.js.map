{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/urlUtils.ts","webpack:///./src/colorUtils.ts","webpack:///./src/index.ts","webpack:///./src/legend.ts","webpack:///./src/symbols.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","UnexpectedUrlFormatError","_super","url","expectedFormat","_this","this","__extends","Error","getUrlSearchParam","URLSearchParams","location","search","getServerRoot","re","match","getServiceUrl","wrapUrl","arcGisUrl","appUrl","href","URL","searchParams","set","toString","getServiceUrlParts","svcUrlRe","_a","__read","rootUrl","folder","serviceName","serviceType","layerId","service","join","root","layer","tool","gpMatch","_b","toolName","serverRootUrl","rgbToHex","rgb","map","isHexString","test","rgbaArrayToCssRgb","rgba","g","b","a","colorToDom","input","document","createElement","type","disabled","colorUtils_1","legend_1","symbols_1","urlUtils_1","arrayToElement","arr","propertyName","objects","table","classList","add","hRow","createTHead","insertRow","body","createTBody","fieldNames","Set","objects_1","__values","objects_1_1","next","done","obj","propName","forEach","fn","th","innerText","appendChild","bRow","cell","insertCell","svcUrl","hrefUrl","id","domElement","toDomElement","cellContentElement","childElementCount","arrayToTable","linkList_1","linkItem","urlParams","textContent","li","createLegendList","serviceUrl_1","links","taskName","taskList_1","link","list","item","element","filter","undefined","createTextNode","Element","target","dXforms","headRow","concat","dt","geoTransforms","gt","values","transformForward","wkid","latestWkid","row","v","j","createLink","Array","from","rows","parseInt","cells","matchCells","idCell","cellId","rowSpan","length","splice","parent","parentElement","removeChild","createDatumXFormTable","symbolImg","symbolToDom","isArray","Date","dl","dd","content","getServerInfo","fetch","sent","text","serverInfoJson","reviver","split","folderName","svc","ti","toISOString","JSON","parse","urlParts","breadcrumbs","partName","pageUrl","querySelector","createBreadcrumbs","__awaiter","serverUrl","mainSection","console","warn","linksList","createAnchor","createListItem","wrap","createLinksList","serverInfo","contentElement","createImg","legend","contentType","imageData","img","src","alt","label","width","height","legendSymbols","legendSymbols_1","legendSymbols_1_1","createLegendDom","legendResponse","frag","createDocumentFragment","layers","layers_1","layers_1_1","layerHeading","layerName","layerType","minScale","maxScale","scaleP","getLegend","elementToReplace","legendUrl","progress","replaceWith","json","legendSpec","remove","toSymbolUrl","imageUrlHex","layerUrl","pictureSymbolToImage","pms","img_1","sValue","setAttribute","pfs","outline","color","style","replace","toLowerCase","borderStyle","borderColor","borderWidth","symbolObject"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\r\n * This error is thrown by functions that expect a URL to be in a certain format\r\n * and are given a URL (or other text string) that does not match the expected format.\r\n * @member {string} message `Unexpected URL format. ${url} does not match ${expectedFormat}`\r\n */\r\nexport class UnexpectedUrlFormatError extends Error {\r\n  /**\r\n   * Creates a new instance of the class.\r\n   * @param url The URL that caused the exception.\r\n   * @param expectedFormat The regular expression showing the format that was expected.\r\n   */\r\n  constructor(public url: string, public expectedFormat: RegExp) {\r\n    super(`Unexpected URL format. ${url} does not match ${expectedFormat}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the value of the \"url\" search parameter from location.search.\r\n * @returns Returns the \"url\" value if present, null otherwise.\r\n */\r\nfunction getUrlSearchParam() {\r\n  const urlSearch = new URLSearchParams(location.search);\r\n  const url = urlSearch.get(\"url\");\r\n  return url;\r\n}\r\n\r\n/**\r\n * Extracts the server root URL.\r\n * @param url Server, service, layer, or other server resource URL\r\n */\r\nexport function getServerRoot(url: string = getUrlSearchParam()!) {\r\n  const re = /^.+\\/arcgis\\/rest(\\/services)?/;\r\n  const match = url.match(re);\r\n  if (!match) {\r\n    throw new UnexpectedUrlFormatError(url, re);\r\n  }\r\n  // Add the \"services\" portion if missing.\r\n  if (!match[1]) {\r\n    // return new URL(\"services\", match[0]).toString();\r\n    return `${match[0]}/services`;\r\n  }\r\n  return match[0];\r\n}\r\n\r\n/**\r\n * Extracts the (Map, Feature, GP, etc.) service URL.\r\n * @param url\r\n */\r\nexport function getServiceUrl(url: string = getUrlSearchParam()!) {\r\n  const re = /^.+\\/arcgis\\/rest\\/services(?:\\/\\w+){1,2}\\/(?:\\w+Server)/i;\r\n  const match = url.match(re);\r\n  if (!match) {\r\n    throw new UnexpectedUrlFormatError(url, re);\r\n  }\r\n  return match[0];\r\n}\r\n\r\n/**\r\n * Converts an ArcGIS Server URL into an application URL with its \"url\"\r\n * search parameter set to the ArcGIS Server URL.\r\n * @param arcGisUrl An ArcGIS Server URL (e.g., map service, folder, server root)\r\n * @param appUrl Application URL. defaults to location.href.\r\n */\r\nexport function wrapUrl(arcGisUrl: string, appUrl: string = location.href) {\r\n  const url = new URL(appUrl);\r\n  url.searchParams.set(\"url\", arcGisUrl);\r\n  return url.toString();\r\n}\r\n\r\n/**\r\n * When a URL is parsed the URLs for its parent's are returned.\r\n */\r\nexport interface IParsedUrls {\r\n  /**\r\n   * E.g., https://www.example.com/arcgis/rest/services\r\n   */\r\n  root: string;\r\n  /**\r\n   * E.g., https://www.example.com/arcgis/rest/services/MyFolder\r\n   */\r\n  folder: string | null;\r\n  /**\r\n   * E.g., https://www.example.com/arcgis/rest/services/MyFolder/MyService/MapServer\r\n   * E.g., https://www.example.com/arcgis/rest/services/MyService/MapServer\r\n   */\r\n  service: string | null;\r\n  /**\r\n   * E.g., https://www.example.com/arcgis/rest/services/MyFolder/MyService/MapServer/0\r\n   * E.g., https://www.example.com/arcgis/rest/services/MyService/MapServer/0\r\n   */\r\n  layer: string | null;\r\n  /**\r\n   * E.g., https://www.example.com/arcgis/rest/services/MyFolder/MyServiceGPServer/MyToolName\r\n   * E.g., https://www.example.com/arcgis/rest/services/MyService/GPServer/MyToolName\r\n   */\r\n  tool: string | null;\r\n}\r\n\r\n/**\r\n * Gets the parent resources' URLs for a given ArcGIS Server URL.\r\n * @param url ArcGIS Server URL.\r\n * @returns Returns server \"root\" URL, and if available: \"folder\", \"service\", and \"layer\" URLs.\r\n */\r\nexport function getServiceUrlParts(\r\n  url: string = getUrlSearchParam()!\r\n): IParsedUrls | null {\r\n  if (!url) {\r\n    return null;\r\n  }\r\n  /*\r\n  /(^.+\\/arcgis\\/rest\\/services)  # 1. Server root\r\n  (?:\r\n    (?:\\/)\r\n    (?:(\\w+)\\/)?                  # 2. Folder name (may or may not be present)\r\n    (\\w+)\r\n    \\/\r\n    (\\w+Server)                   # 3. The type of service (MapServer, FeatureServer, etc)\r\n    (?:\r\n      \\/(\\d+)                     # 4. Layer number\r\n    )?\r\n  )?/\r\n  */\r\n  const svcUrlRe = /(^.+\\/arcgis\\/rest\\/services)(?:(?:\\/)(?:(\\w+)\\/)?(\\w+)\\/(\\w+Server)(?:\\/(\\d+))?)?/;\r\n  const gpSvcUrlRe = /(^.+\\/arcgis\\/rest\\/services)(?:(?:\\/)(?:(\\w+)\\/)?(\\w+)\\/(\\w+Server)(?:\\/([^\\/]+))?)?/;\r\n\r\n  const match = url.match(svcUrlRe);\r\n  if (match) {\r\n    const [, rootUrl, folder, serviceName, serviceType, layerId] = match;\r\n\r\n    const service = serviceName\r\n      ? `${rootUrl}/${\r\n          folder ? [folder, serviceName].join(\"/\") : serviceName\r\n        }/${serviceType}`\r\n      : null;\r\n\r\n    return {\r\n      root: rootUrl,\r\n      folder: folder ? `${rootUrl}/${folder}` : null,\r\n      service,\r\n      layer: service && layerId ? `${service}/${layerId}` : null,\r\n      tool: null\r\n    };\r\n  }\r\n\r\n  const gpMatch = url.match(gpSvcUrlRe);\r\n  if (gpMatch) {\r\n    const [, rootUrl, folder, serviceName, serviceType, toolName] = gpMatch;\r\n\r\n    const service = serviceName\r\n      ? `${rootUrl}/${\r\n          folder ? [folder, serviceName].join(\"/\") : serviceName\r\n        }/${serviceType}`\r\n      : null;\r\n\r\n    return {\r\n      root: rootUrl,\r\n      folder: folder ? `${rootUrl}/${folder}` : null,\r\n      service,\r\n      layer: null,\r\n      tool: service && toolName ? `${service}/${toolName}` : null\r\n    };\r\n  }\r\n\r\n  // Possibly might be missing the \"services\" part. Try that before throwing exception.\r\n  const serverRootUrl = getServerRoot();\r\n  if (!serverRootUrl) {\r\n    throw new UnexpectedUrlFormatError(url, svcUrlRe);\r\n  }\r\n  return {\r\n    root: serverRootUrl,\r\n    folder: null,\r\n    service: null,\r\n    layer: null,\r\n    tool: null\r\n  };\r\n}\r\n","import { Color } from \"@esri/arcgis-rest-common-types\";\r\n\r\nexport function isHexString(s: string) {\r\n  if (!s) {\r\n    return false;\r\n  }\r\n  return /^[0-9a-f]+$/i.test(s);\r\n}\r\n\r\nexport function rgbToHex(rgb: number[]) {\r\n  const hexValues = rgb.map(value => value.toString(16));\r\n  return `#${hexValues.join(\"\")}`;\r\n}\r\n\r\nexport function rgbaArrayToCssRgb(rgba: Color) {\r\n  const [r, g, b] = rgba;\r\n  let [, , , a] = rgba;\r\n  a = a / 255;\r\n  return `rgba(${[r, g, b, a].join(\",\")})`;\r\n}\r\n\r\nexport function colorToDom(rgba: Color) {\r\n  const [r, g, b] = rgba;\r\n  let [, , , a] = rgba;\r\n  a = a / 255;\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"color\";\r\n  input.value = rgbToHex([r, g, b]);\r\n  input.disabled = true;\r\n  return input;\r\n}\r\n","import { Color } from \"@esri/arcgis-rest-common-types\";\r\nimport { colorToDom } from \"./colorUtils\";\r\nimport {\r\n  IDatumTransformation,\r\n  ILinkInfo,\r\n  IServerInfo,\r\n  IService\r\n} from \"./interfaces\";\r\nimport { createLegendList, getLegend } from \"./legend\";\r\nimport { symbolToDom } from \"./symbols\";\r\nimport {\r\n  getServerRoot,\r\n  getServiceUrl,\r\n  getServiceUrlParts,\r\n  wrapUrl\r\n} from \"./urlUtils\";\r\n\r\nfunction arrayToTable(objects: any[], propertyName?: string) {\r\n  const table = document.createElement(\"table\");\r\n  if (propertyName) {\r\n    table.classList.add(`property--${propertyName}`);\r\n  }\r\n  const head = table.createTHead();\r\n  const hRow = head.insertRow();\r\n\r\n  const body = table.createTBody();\r\n\r\n  // Get list of all field names.\r\n  const fieldNames = new Set<string>();\r\n  for (const obj of objects) {\r\n    for (const propName in obj) {\r\n      if (obj.hasOwnProperty(propName)) {\r\n        fieldNames.add(propName);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add a table heading cell for each property.\r\n  fieldNames.forEach(fn => {\r\n    const th = document.createElement(\"th\");\r\n    th.innerText = fn;\r\n    hRow.appendChild(th);\r\n  });\r\n\r\n  objects.forEach(o => {\r\n    const bRow = body.insertRow();\r\n    fieldNames.forEach(fn => {\r\n      const value = o[fn];\r\n      const cell = bRow.insertCell();\r\n      if (fn === \"name\" && o.hasOwnProperty(\"id\")) {\r\n        const a = document.createElement(\"a\");\r\n        const svcUrl = getServiceUrl();\r\n        const hrefUrl = new URL(location.href);\r\n        hrefUrl.searchParams.set(\"url\", `${svcUrl}/${o.id}`);\r\n        a.href = hrefUrl.toString();\r\n        a.innerText = value;\r\n        cell.appendChild(a);\r\n      } else if (fn === \"domain\") {\r\n        const domElement = toDomElement(value);\r\n        if (domElement) {\r\n          cell.appendChild(domElement);\r\n        }\r\n      } else if (/^(string)|(number)/.test(typeof value)) {\r\n        cell.innerText = value;\r\n      } else {\r\n        const cellContentElement = toDomElement(value, fn);\r\n        if (cellContentElement) {\r\n          cell.appendChild(cellContentElement);\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the table only if the body is not empty.\r\n  return body.childElementCount ? table : null;\r\n}\r\n\r\nfunction arrayToElement(arr: any[], propertyName?: string) {\r\n  if (propertyName) {\r\n    if (\r\n      /^(fields)|(layers)|(tables)|(codedValues)|(lods)|(indexes)|(relationships)|(((symbol)|(sub))Layers)|((sub)?types)$/.test(\r\n        propertyName\r\n      )\r\n    ) {\r\n      return arrayToTable(arr, propertyName);\r\n    }\r\n\r\n    if (/^(folders)|(services)/.test(propertyName)) {\r\n      const linkList = document.createElement(\"ul\");\r\n      arr.forEach((linkItem: ILinkInfo) => {\r\n        const a = document.createElement(\"a\");\r\n        const urlParams = new URLSearchParams({ url: linkItem.url });\r\n        a.href = new URL(\"?\" + urlParams.toString(), location.href).toString();\r\n        a.textContent = linkItem.name;\r\n        const li = document.createElement(\"li\");\r\n        li.appendChild(a);\r\n        linkList.appendChild(li);\r\n      });\r\n      return linkList;\r\n    }\r\n\r\n    if (propertyName === \"legend\") {\r\n      return createLegendList(arr);\r\n    }\r\n\r\n    if (propertyName === \"tasks\") {\r\n      const serviceUrl = getServiceUrl();\r\n      const links = arr.map(taskName => {\r\n        const a = document.createElement(\"a\");\r\n        a.href = wrapUrl(`${serviceUrl}/${taskName}`);\r\n        a.textContent = taskName;\r\n        const li = document.createElement(\"li\");\r\n        li.appendChild(a);\r\n        return li;\r\n      });\r\n      const taskList = document.createElement(\"ul\");\r\n      links.forEach(link => taskList.appendChild(link));\r\n      return taskList;\r\n    }\r\n\r\n    if (propertyName === \"color\") {\r\n      return colorToDom(arr as Color);\r\n    }\r\n  }\r\n\r\n  const list = document.createElement(\"ul\");\r\n  if (propertyName) {\r\n    list.classList.add(`property--${propertyName}`);\r\n  }\r\n\r\n  arr\r\n    .map(item => {\r\n      const element = toDomElement(item);\r\n      if (element) {\r\n        const li = document.createElement(\"li\");\r\n        li.appendChild(element);\r\n        return li;\r\n      }\r\n    })\r\n    .filter(li => li !== undefined)\r\n    .forEach(li => list.appendChild(li!));\r\n  return list;\r\n}\r\n\r\n/**\r\n * Converts an object into a DOM node.\r\n * @param o any type of JavaScript object or value.\r\n * @returns if the input is a standard object, returned value will be an HTMLDListElement.\r\n * For other types, such as string, number, boolean, or Date, a Text element will be returned\r\n */\r\nfunction toDomElement(o: any, propertyName?: string) {\r\n  if (o == null) {\r\n    return document.createTextNode(o === null ? \"null\" : \"undefined\");\r\n  }\r\n\r\n  if (o instanceof Element) {\r\n    return o;\r\n  }\r\n\r\n  if (propertyName) {\r\n    // if propertyName ends with \"url\" and is not a hex number...\r\n    if (o && /Url$/i.test(propertyName) && !/^[0-9a-f]+$/i.test(o)) {\r\n      const a = document.createElement(\"a\");\r\n      a.textContent = o;\r\n      a.href = o;\r\n      return a;\r\n    }\r\n    if (/^(?:latest)?[Ww]kid$/.test(propertyName)) {\r\n      const a = document.createElement(\"a\");\r\n      a.innerText = o;\r\n      a.href = `https://epsg.io/${o}`;\r\n      a.target = \"epsg\";\r\n      return a;\r\n    }\r\n    if (propertyName === \"datumTransformations\") {\r\n      return createDatumXFormTable(o);\r\n    }\r\n  }\r\n\r\n  // Try symbol\r\n  const symbolImg = symbolToDom(o);\r\n  if (symbolImg) {\r\n    return symbolImg;\r\n  }\r\n\r\n  if (Array.isArray(o)) {\r\n    return arrayToElement(o, propertyName);\r\n  }\r\n\r\n  if (typeof o === \"boolean\") {\r\n    return document.createTextNode(o ? \"true\" : \"false\");\r\n  }\r\n\r\n  if (/^(string)|(number)$/.test(typeof o) || o instanceof Date) {\r\n    return document.createTextNode(`${o}`);\r\n  }\r\n\r\n  const dl = document.createElement(\"dl\");\r\n\r\n  for (const key in o) {\r\n    if (o.hasOwnProperty(key)) {\r\n      const value = o[key];\r\n      const dt = document.createElement(\"dt\");\r\n      dt.innerText = key;\r\n      const dd = document.createElement(\"dd\");\r\n      const content = toDomElement(value, key);\r\n      if (content) {\r\n        dd.appendChild(content);\r\n      }\r\n\r\n      [dt, dd].forEach(element => dl.appendChild(element));\r\n    }\r\n  }\r\n\r\n  return dl;\r\n}\r\n\r\nfunction createDatumXFormTable(dXforms: IDatumTransformation[]) {\r\n  const table = document.createElement(\"table\");\r\n  table.classList.add(\"property--datumTransformations\");\r\n  const headRow = table.createTHead().insertRow();\r\n  const body = table.createTBody();\r\n\r\n  const propNames = [\"name\", \"transformForward\", \"wkid\", \"latestWkid\"];\r\n\r\n  function createLink(name: string, wkid: number, latestWkid?: number) {\r\n    const a = document.createElement(\"a\");\r\n    a.innerText = name;\r\n    a.target = \"epsg\";\r\n    const url = `https://epsg.io/${latestWkid || wkid}`;\r\n    a.href = url;\r\n    return a;\r\n  }\r\n\r\n  [\"id\"].concat(propNames).forEach(s => {\r\n    const th = document.createElement(\"th\");\r\n    th.innerText = s;\r\n    headRow.appendChild(th);\r\n  });\r\n\r\n  dXforms.forEach((dt, i) => {\r\n    dt.geoTransforms.forEach(gt => {\r\n      const values = [i, gt.name, gt.transformForward, gt.wkid, gt.latestWkid];\r\n      const row = body.insertRow();\r\n      values.forEach((v, j) => {\r\n        const cell = row.insertCell();\r\n        if (j === 1) {\r\n          cell.appendChild(createLink(gt.name, gt.wkid, gt.latestWkid));\r\n        } else {\r\n          cell.innerText = `${v}`;\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  // Loop through the rows and merge the ID cells that are the same.\r\n  const dtxIds = new Set(\r\n    Array.from(body.rows, r => parseInt(r.cells[0].innerText, 10))\r\n  );\r\n  dtxIds.forEach(id => {\r\n    // Get all rows with an id cell matching the current id.\r\n    const matchCells = Array.from(body.rows)\r\n      .map(row => row.cells[0])\r\n      .filter(idCell => {\r\n        if (!idCell.innerText) {\r\n          return false;\r\n        }\r\n        const cellId = parseInt(idCell.innerText, 10);\r\n        return id === cellId;\r\n      });\r\n    const rowSpan = matchCells.length;\r\n    // Don't need to proceed any further if there is only one row for the id.\r\n    if (rowSpan > 1) {\r\n      matchCells[0].rowSpan = rowSpan;\r\n      const cellsToRemove = matchCells.splice(1);\r\n      cellsToRemove.forEach(cell => {\r\n        const parent = cell.parentElement;\r\n        if (parent) {\r\n          parent.removeChild(cell);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return table;\r\n}\r\n\r\n/**\r\n * Provides information about a map server URL\r\n * @param url ArcGIS server, folder, service, or layer URL.\r\n */\r\nasync function getServerInfo(url: string): Promise<IServerInfo> {\r\n  const serverResponse = await fetch(url + \"?f=json\");\r\n  const serverInfoJson = await serverResponse.text();\r\n  const root = getServerRoot(url);\r\n\r\n  const reviver = (key: any, value: any) => {\r\n    if (\r\n      /^(supported\\w+Format\\w*)|(Keywords)|(capabilities)$/i.test(key) &&\r\n      typeof value === \"string\"\r\n    ) {\r\n      return value ? value.split(/[,\\s]+/g) : \"\";\r\n    }\r\n    if (key === \"folders\") {\r\n      const folderNames = value as string[];\r\n      return folderNames.map(folderName => ({\r\n        name: folderName,\r\n        url: `${root}/${folderName}`\r\n      }));\r\n    }\r\n    if (key === \"services\") {\r\n      const services = value as IService[];\r\n      return services.map(svc => ({\r\n        name: svc.name,\r\n        url: `${root}/${svc.name}/${svc.type}`\r\n      }));\r\n    }\r\n    if (key === \"timeExtent\") {\r\n      const timeInstants = value as number[];\r\n      return timeInstants.map(ti => new Date(ti).toISOString());\r\n    }\r\n    return value;\r\n  };\r\n\r\n  const serverInfo = JSON.parse(serverInfoJson, reviver);\r\n  return serverInfo;\r\n}\r\n\r\n/**\r\n * Creates the main DOM element that will be added to the page body.\r\n * @param serverInfo parsed JSON information returned from a server, folder, service, or layer URL.\r\n * @returns A Document fragment to be appended to document.body.\r\n */\r\nfunction createDom(serverInfo: IServerInfo) {\r\n  const frag = document.createDocumentFragment();\r\n\r\n  const dl = document.createElement(\"dl\");\r\n\r\n  for (const propName in serverInfo) {\r\n    if (serverInfo.hasOwnProperty(propName)) {\r\n      const value = serverInfo[propName];\r\n      const dt = document.createElement(\"dt\");\r\n      dt.innerText = propName;\r\n\r\n      const dd = document.createElement(\"dd\");\r\n      const element = toDomElement(value, propName);\r\n      dl.appendChild(dt);\r\n      if (element) {\r\n        dd.appendChild(element);\r\n      }\r\n      dl.appendChild(dd);\r\n    }\r\n  }\r\n  frag.append(dl);\r\n\r\n  return frag;\r\n}\r\n\r\n/**\r\n * Creates links to parent resources and appends this list to document body.\r\n */\r\nfunction createBreadcrumbs() {\r\n  const urlParts = getServiceUrlParts();\r\n  if (urlParts) {\r\n    const breadcrumbs = document.createElement(\"nav\");\r\n    const list = document.createElement(\"ol\");\r\n    breadcrumbs.appendChild(list);\r\n    breadcrumbs.classList.add(\"breadcrumbs\");\r\n    for (const partName in urlParts) {\r\n      if (urlParts.hasOwnProperty(partName)) {\r\n        const url = (urlParts as any)[partName];\r\n        if (!url) {\r\n          continue;\r\n        }\r\n        const li = document.createElement(\"li\");\r\n        li.classList.add(\"breadcrumbs__item\");\r\n        const a = document.createElement(\"a\");\r\n        a.classList.add(\"breadcrumbs__item__anchor\");\r\n        const pageUrl = new URL(location.href);\r\n        pageUrl.searchParams.set(\"url\", url);\r\n        a.href = pageUrl.toString();\r\n        a.innerText = partName;\r\n        li.appendChild(a);\r\n        list.appendChild(li);\r\n      }\r\n    }\r\n    const header = document.body.querySelector(\"header\");\r\n    header!.appendChild(breadcrumbs);\r\n  }\r\n}\r\n\r\ncreateBreadcrumbs();\r\n\r\nfunction createLinksList(url: string) {\r\n  const { service, tool: toolName, layer } = getServiceUrlParts(url)!;\r\n\r\n  // Exit if deeper than service level.\r\n  if (!service || (toolName || layer)) {\r\n    return;\r\n  }\r\n\r\n  // Exit if GP service.\r\n  if (/GPServer/.test(service)) {\r\n    return;\r\n  }\r\n\r\n  function createListItem(a: HTMLAnchorElement) {\r\n    const li = document.createElement(\"li\");\r\n    li.appendChild(a);\r\n    list.appendChild(li);\r\n  }\r\n\r\n  function createAnchor(s: string, wrap?: boolean) {\r\n    const a = document.createElement(\"a\");\r\n    a.textContent = s;\r\n    let href = `${service}/${s}`;\r\n    if (wrap) {\r\n      href = wrapUrl(href);\r\n    } else {\r\n      a.target = \"_blank\";\r\n    }\r\n    a.href = href;\r\n    return a;\r\n  }\r\n\r\n  let links = [\"legend\", \"layers\", \"info/iteminfo\"].map(s =>\r\n    createAnchor(s, true)\r\n  );\r\n  const list = document.createElement(\"ul\");\r\n  links.forEach(createListItem);\r\n  // These endpoints don't support JSON, so will link directly\r\n  // instead of using wrapped app URL.\r\n  links = [\"metadata\", \"thumbnail\"].map(s => createAnchor(`info/${s}`, false));\r\n  links.forEach(createListItem);\r\n\r\n  return list;\r\n}\r\n\r\n(async () => {\r\n  const urlParams = new URLSearchParams(location.search);\r\n\r\n  const serverUrl = urlParams.get(\"url\");\r\n\r\n  if (!serverUrl) {\r\n    return;\r\n  }\r\n\r\n  // Put URL in box:\r\n  const input = document.querySelector<HTMLInputElement>(\r\n    \"form > input[name='url']\"\r\n  );\r\n  if (input) {\r\n    input.value = serverUrl;\r\n  }\r\n\r\n  const serviceRe = /((Map)|(Feature))Server\\/?$/i;\r\n\r\n  const mainSection = document.querySelector(\"#main\");\r\n\r\n  if (!mainSection) {\r\n    console.warn(\"couldn't find main section\");\r\n  }\r\n\r\n  const linksList = createLinksList(serverUrl);\r\n  if (linksList) {\r\n    mainSection!.appendChild(linksList);\r\n  }\r\n\r\n  const serverInfo = await getServerInfo(serverUrl);\r\n  const contentElement = toDomElement(serverInfo);\r\n  if (contentElement) {\r\n    mainSection!.appendChild(contentElement);\r\n  }\r\n})();\r\n","import { getServiceUrl } from \"./urlUtils\";\r\n\r\nexport interface ILegendLayer {\r\n  layerId: number;\r\n  layerName: string;\r\n  layerType: string;\r\n  minScale: number;\r\n  maxScale: number;\r\n  legend: ILegendSymbol[];\r\n}\r\n\r\nexport interface ILegendResponse {\r\n  layers: ILegendLayer[];\r\n}\r\n\r\nexport interface ILegendSymbol {\r\n  label: string | null;\r\n  url: string;\r\n  imageData: string;\r\n  contentType: string;\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\nfunction createImg(legend: ILegendSymbol) {\r\n  const url = `data:${legend.contentType};base64,${legend.imageData}`;\r\n  const img = document.createElement(\"img\");\r\n  img.src = url;\r\n  img.alt = legend.label || \"unnamed legend symbol\";\r\n  img.width = legend.width;\r\n  img.height = legend.height;\r\n  return img;\r\n}\r\n\r\nexport function createLegendList(legendSymbols: ILegendSymbol[]) {\r\n  // If there is only a single, unlabeld symbol, return just an img instead of\r\n  // a definition list.\r\n  if (legendSymbols.length === 1 && !legendSymbols[0].label) {\r\n    return createImg(legendSymbols[0]);\r\n  }\r\n  const dl = document.createElement(\"dl\");\r\n  for (const s of legendSymbols) {\r\n    const img = createImg(s);\r\n    const dt = document.createElement(\"dt\");\r\n    dt.textContent = s.label;\r\n    const dd = document.createElement(\"dd\");\r\n    dd.appendChild(img);\r\n    [dt, dd].forEach(element => dl.appendChild(element));\r\n  }\r\n  return dl;\r\n}\r\n\r\nexport function createLegendDom(legendResponse: ILegendResponse) {\r\n  const frag = document.createDocumentFragment();\r\n  const { layers } = legendResponse;\r\n\r\n  for (const layer of layers) {\r\n    const layerHeading = document.createElement(\"h2\");\r\n    layerHeading.textContent = `${layer.layerId}. ${layer.layerName} (${\r\n      layer.layerType\r\n    })`;\r\n    frag.appendChild(layerHeading);\r\n    if (layer.minScale || layer.maxScale) {\r\n      const scaleP = document.createElement(\"p\");\r\n      scaleP.textContent = `Scale: ${layer.minScale} to ${layer.maxScale}`;\r\n      frag.appendChild(scaleP);\r\n    }\r\n    if (layer.legend) {\r\n      frag.appendChild(createLegendList(layer.legend));\r\n    }\r\n  }\r\n\r\n  return frag;\r\n}\r\n\r\nexport async function getLegend(\r\n  elementToReplace: HTMLElement,\r\n  legendUrl?: string\r\n) {\r\n  const progress = document.createElement(\"progress\");\r\n  progress.textContent = \"loading legend...\";\r\n  elementToReplace!.replaceWith(progress);\r\n  try {\r\n    const svcUrl = getServiceUrl(legendUrl);\r\n    legendUrl = `${svcUrl}/legend?f=json`;\r\n    const response = await fetch(legendUrl);\r\n    const legendSpec = (await response.json()) as ILegendResponse;\r\n    const frag = createLegendDom(legendSpec);\r\n    progress.replaceWith(frag);\r\n  } catch {\r\n    if (progress.parentElement) {\r\n      progress.remove();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  IPictureFillSymbol,\r\n  IPictureMarkerSymbol,\r\n  ISimpleFillSymbol,\r\n  ISimpleLineSymbol,\r\n  ISimpleMarkerSymbol,\r\n  ISymbol,\r\n  SimpleFillSymbolStyle,\r\n  SimpleLineSymbolStyle,\r\n  SimpleMarkerSymbolStyle\r\n} from \"@esri/arcgis-rest-common-types\";\r\nimport { isHexString, rgbaArrayToCssRgb } from \"./colorUtils\";\r\nimport { getServiceUrlParts } from \"./urlUtils\";\r\n\r\n/**\r\n * A symbol \"url\" property consists of just a hexidecimal string. This function\r\n * creates a valid URL from that hex string by combining it with the layer URL.\r\n * @param imageUrlHex The hexidecimal string from the \"url\" property of a symbol object.\r\n * @param layerUrl The URL of the service layer. If omitted, function will attempt to autodetect using \"url\" search parameter.\r\n */\r\nexport function toSymbolUrl(imageUrlHex: string, layerUrl?: string) {\r\n  // Ensure valid layer URL\r\n  const parts = getServiceUrlParts(layerUrl);\r\n  layerUrl = parts!.layer!;\r\n\r\n  const imageUrl = `${layerUrl}/images/${imageUrlHex}`;\r\n  return imageUrl;\r\n}\r\n\r\n/**\r\n * Converts a picture marker symbol object into an img element.\r\n * @param pms A picture marker symbol object.\r\n */\r\nexport function pictureSymbolToImage(\r\n  pms: IPictureMarkerSymbol | IPictureFillSymbol\r\n) {\r\n  let url: string | null = null;\r\n  if (pms.imageData && pms.contentType) {\r\n    url = `data:${pms.contentType};base64,${pms.imageData}`;\r\n  } else if (isHexString(pms.url!)) {\r\n    url = toSymbolUrl(pms.url!);\r\n  }\r\n  if (url) {\r\n    const img = document.createElement(\"img\");\r\n    img.src = url;\r\n    img.alt = \"legend symbol\";\r\n    [\"width\", \"height\"].forEach(propName => {\r\n      const sValue = pms.hasOwnProperty(propName)\r\n        ? (pms as any)[propName]\r\n        : null;\r\n      if (sValue) {\r\n        img.setAttribute(propName, sValue);\r\n      }\r\n    });\r\n    const pfs = pms as IPictureFillSymbol;\r\n    if (pfs.outline) {\r\n      const { color, width } = pfs.outline;\r\n      let style: string | undefined = pfs.outline.style;\r\n      if (style) {\r\n        style = style.replace(/^esriSLS/, \"\").toLowerCase();\r\n        if (/null/.test(style)) {\r\n          style = undefined;\r\n        } else {\r\n          img.style.borderStyle = style;\r\n        }\r\n      }\r\n\r\n      if (color) {\r\n        img.style.borderColor = rgbaArrayToCssRgb(color);\r\n      }\r\n\r\n      if (width !== undefined) {\r\n        img.style.borderWidth = `${width}px`;\r\n      }\r\n    }\r\n    return img;\r\n  }\r\n  return null;\r\n}\r\n\r\ninterface ISize {\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nfunction trimPrefix(\r\n  styleName:\r\n    | SimpleFillSymbolStyle\r\n    | SimpleLineSymbolStyle\r\n    | SimpleMarkerSymbolStyle\r\n) {\r\n  if (!styleName) {\r\n    return null;\r\n  }\r\n  if (/null$/i.test(styleName)) {\r\n    return null;\r\n  }\r\n  const styleDesc = styleName.replace(/^esriS[A-Z]S/, \"\");\r\n  const words = styleDesc.match(/[A-Z][a-z]+/g);\r\n  if (!words) {\r\n    return styleDesc;\r\n  }\r\n  return words.map(w => w.toLowerCase()).join(\"-\");\r\n}\r\n\r\nfunction applyOutlineStyle(element: HTMLElement, symbol?: ISimpleLineSymbol) {\r\n  if (symbol) {\r\n    const { style, color, width } = symbol;\r\n    if (style) {\r\n      const classStyle = trimPrefix(style);\r\n      if (classStyle) {\r\n        element.classList.add(`symbol-outline-style-${classStyle}`);\r\n        element.style.borderStyle = classStyle;\r\n      }\r\n    }\r\n    if (color) {\r\n      element.style.borderColor = rgbaArrayToCssRgb(color);\r\n    }\r\n    if (width) {\r\n      element.style.borderWidth = `${width}px`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction sfsToDom(\r\n  symbol: ISimpleFillSymbol,\r\n  swatchSize: ISize = { width: \"20px\", height: \"20px\" }\r\n) {\r\n  const div = document.createElement(\"div\");\r\n\r\n  const { color, style } = symbol;\r\n\r\n  if (style) {\r\n    const fillStyle = trimPrefix(style);\r\n    if (color) {\r\n      div.style.backgroundColor = rgbaArrayToCssRgb(color);\r\n    }\r\n    if (fillStyle !== \"solid\") {\r\n      div.textContent = style;\r\n    } else {\r\n      div.style.width = swatchSize.width;\r\n      div.style.height = swatchSize.height;\r\n    }\r\n    div.classList.add(`fill-style--${style}`);\r\n    // TODO: show the fill style using CSS instead of just writing the text in div.\r\n  }\r\n\r\n  applyOutlineStyle(div, symbol.outline);\r\n\r\n  return div;\r\n}\r\n\r\n/**\r\n * Converts a symbol object to an img if possible.\r\n * @param symbolObject A symbol object.\r\n */\r\nexport function symbolToDom(symbolObject: ISymbol) {\r\n  if (/^esriP[MF]S$/.test(symbolObject.type)) {\r\n    return pictureSymbolToImage(symbolObject as IPictureMarkerSymbol);\r\n  }\r\n  // if (/^esriSFS$/.test(symbolObject.type)) {\r\n  //   return sfsToDom(symbolObject as ISimpleFillSymbol);\r\n  // }\r\n  return null;\r\n}\r\n"],"sourceRoot":""}